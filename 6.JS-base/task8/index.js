/* Когда мы проходим регистрацию, то в большинстве случаев у нас запрашивают пароль. И
всегда для него есть некоторые ограничения по длине либо по символам. Сейчас вы
напишете программу, которая будет проверять на валидность пароль, введенный
пользователем.
Для начала вам необходимо запросить пароль у пользователя при помощи prompt.
Отобразите сообщение “Введите пароль”.
Пароль должен удовлетворять следующим условиям:
1. Длина пароля должна быть минимум 3 символа и не больше 20 символов (включая
20).
2. Пароль должен содержать минимум 1 прописную (большую) букву.
3. Пароль должен содержать минимум 1 цифру.
Если все условия удовлетворены, то выведите при помощи alert сообщение “Пароль
валидный. Добро пожаловать в аккаунт!”, иначе - “Пароль не удовлетворяет условиям!
Перезагрузите страницу и попробуйте ввести его еще раз.”
Посмотрите на несколько возможных результатов:
1. “1234f” - не удовлетворяет условиям
2. “123456” - не удовлетворяет условиям
3. “1234F” - удовлетворяет условиям
4. “12” - не удовлетворяет условиям
5. “JavaScript”- не удовлетворяет условиям
6. “JavaScript123” - удовлетворяет условиям */

// То, что решил я

let usersPassword = prompt('Введите пароль');
let validPassword = 'Пароль валидный. Добро пожаловать в аккаунт!';
let wrongPassword = 'Пароль не удовлетворяет условиям! Перезагрузите страницу и попробуйте ввести его еще раз.';

if (3 <= usersPassword.length <= 20 && ) {
    alert(validPassword)
} else {
    alert(wrongPassword)
};

//  А вот так выглядит ответ. Придется спросить у препода, что это еще за методы
/* const password = prompt('Введите пароль');
const errorMessage = 'Пароль не удовлетворяет условиям! Перезагрузите страницу и попробуйте ввести его еще раз.';
const successMessage = 'Пароль валидный. Добро пожаловать в аккаунт!';

if (password.length < 3 || password.length > 30) {
  alert(errorMessage);
} else {
  let hasBigSymbol = false;
  let hasNumbers = false;
  for (let i = 0; i < password.length; i += 1) {
    const symbol = password[i];
    const isNumberSymbol = !isNaN(parseInt(symbol));
    if (symbol === symbol.toUpperCase() && !isNumberSymbol) {
      hasBigSymbol = true;
    }
    if (isNumberSymbol) {
      hasNumbers = true;
    }
  }

  if (!hasBigSymbol || !hasNumbers) {
    alert(errorMessage);
  } else {
    alert(successMessage);
  }
} */